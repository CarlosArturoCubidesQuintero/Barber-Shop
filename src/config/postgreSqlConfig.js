// Carga las variables de entorno desde un archivo .env en process.env
require("dotenv").config();

// Importa la clase Pool desde el m√≥dulo 'pg' (node-postgres) para manejar conexiones a PostgreSQL
const { Pool } = require("pg");

// Configuraci√≥n del Pool de conexi√≥n a la base de datos PostgreSQL
const pool = new Pool({
  user: process.env.DB_USER, // Usuario de la base de datos, tomado de las variables de entorno
  host: process.env.DB_HOST, // Direcci√≥n del servidor de la base de datos
  database: process.env.DB_NAME, // Nombre de la base de datos a la que se conectar√°
  password: process.env.DB_PASS, // Contrase√±a del usuario de la base de datos
  port: process.env.DB_PORT, // Puerto en el que se ejecuta PostgreSQL (generalmente 5432)
  max: 10, // N√∫mero m√°ximo de conexiones activas en el pool
  idleTimeoutMillis: 30000, // Tiempo (en milisegundos) antes de cerrar conexiones inactivas
  connectionTimeoutMillis: 2000, // Tiempo m√°ximo (en milisegundos) de espera para establecer una conexi√≥n
});
 
// Funci√≥n as√≠ncrona para probar la conexi√≥n a la base de datos
const testDB = async () => {
  try {
    // Intenta obtener una conexi√≥n del pool
    const client = await pool.connect();
    console.log("‚úÖ Conectado a PostgreSQL üöÄ"); // Mensaje de √©xito si la conexi√≥n es establecida
    client.release(); // Libera la conexi√≥n para que pueda ser reutilizada en el pool
  } catch (error) {
    // Captura cualquier error en la conexi√≥n y lo muestra en la consola
    console.error("‚ùå Error en la conexi√≥n a PostgreSQL:", error);
  }
};

// Llama a la funci√≥n para probar la conexi√≥n
testDB();

// Exporta el pool de conexiones para que pueda ser utilizado en otros archivos del proyecto
module.exports = pool;
